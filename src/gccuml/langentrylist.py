##
## File automatically generated using grab-entry-types.sh script
##
## Source files taken from GCC compiler project to generate this file are:
##	  gcc/tree.def
##	  gcc/cp/cp-tree.def
##


##
## list of entries
## fields: symbol, name (used in dump-lang-raw), tree code class, number of argument-words
##
## tree code class meaning (taken from gcc/tree-core.h):
##     tcc_exceptional  -- An exceptional code (fits no category)
##     tcc_constant     -- A constant.
##     tcc_type         -- A type object code.
##     tcc_declaration  -- A declaration (also serving as variable refs).
##     tcc_reference    -- A reference to storage.
##     tcc_comparison   -- A comparison expression.
##     tcc_unary        -- A unary arithmetic expression.
##     tcc_binary       -- A binary arithmetic expression.
##     tcc_statement    -- A statement expression, which have side effects, but usually no interesting value.
##     tcc_vl_exp       -- A function call or other expression with a variable-length operand vector.
##     tcc_expression   -- Any other expression.
##
ENTRY_DEF_LIST = [
    ## gcc/tree.def
    ("ERROR_MARK", "error_mark", "tcc_exceptional", 0),
    ("IDENTIFIER_NODE", "identifier_node", "tcc_exceptional", 0),
    ("TREE_LIST", "tree_list", "tcc_exceptional", 0),
    ("TREE_VEC", "tree_vec", "tcc_exceptional", 0),
    ("BLOCK", "block", "tcc_exceptional", 0),
    ("OFFSET_TYPE", "offset_type", "tcc_type", 0),
    ("ENUMERAL_TYPE", "enumeral_type", "tcc_type", 0),
    ("BOOLEAN_TYPE", "boolean_type", "tcc_type", 0),
    ("INTEGER_TYPE", "integer_type", "tcc_type", 0),
    ("BITINT_TYPE", "bitint_type", "tcc_type", 0),
    ("REAL_TYPE", "real_type", "tcc_type", 0),
    ("POINTER_TYPE", "pointer_type", "tcc_type", 0),
    ("REFERENCE_TYPE", "reference_type", "tcc_type", 0),
    ("NULLPTR_TYPE", "nullptr_type", "tcc_type", 0),
    ("FIXED_POINT_TYPE", "fixed_point_type", "tcc_type", 0),
    ("COMPLEX_TYPE", "complex_type", "tcc_type", 0),
    ("VECTOR_TYPE", "vector_type", "tcc_type", 0),
    ("ARRAY_TYPE", "array_type", "tcc_type", 0),
    ("RECORD_TYPE", "record_type", "tcc_type", 0),
    ("UNION_TYPE", "union_type", "tcc_type", 0),
    ("QUAL_UNION_TYPE", "qual_union_type", "tcc_type", 0),
    ("VOID_TYPE", "void_type", "tcc_type", 0),
    ("FUNCTION_TYPE", "function_type", "tcc_type", 0),
    ("METHOD_TYPE", "method_type", "tcc_type", 0),
    ("LANG_TYPE", "lang_type", "tcc_type", 0),
    ("OPAQUE_TYPE", "opaque_type", "tcc_type", 0),
    ("VOID_CST", "void_cst", "tcc_constant", 0),
    ("INTEGER_CST", "integer_cst", "tcc_constant", 0),
    ("POLY_INT_CST", "poly_int_cst", "tcc_constant", 0),
    ("REAL_CST", "real_cst", "tcc_constant", 0),
    ("FIXED_CST", "fixed_cst", "tcc_constant", 0),
    ("COMPLEX_CST", "complex_cst", "tcc_constant", 0),
    ("VECTOR_CST", "vector_cst", "tcc_constant", 0),
    ("STRING_CST", "string_cst", "tcc_constant", 0),
    ("RAW_DATA_CST", "raw_data_cst", "tcc_constant", 0),
    ("FUNCTION_DECL", "function_decl", "tcc_declaration", 0),
    ("LABEL_DECL", "label_decl", "tcc_declaration", 0),
    ("FIELD_DECL", "field_decl", "tcc_declaration", 0),
    ("VAR_DECL", "var_decl", "tcc_declaration", 0),
    ("CONST_DECL", "const_decl", "tcc_declaration", 0),
    ("PARM_DECL", "parm_decl", "tcc_declaration", 0),
    ("TYPE_DECL", "type_decl", "tcc_declaration", 0),
    ("RESULT_DECL", "result_decl", "tcc_declaration", 0),
    ("DEBUG_EXPR_DECL", "debug_expr_decl", "tcc_declaration", 0),
    ("DEBUG_BEGIN_STMT", "debug_begin_stmt", "tcc_statement", 0),
    ("NAMESPACE_DECL", "namespace_decl", "tcc_declaration", 0),
    ("IMPORTED_DECL", "imported_decl", "tcc_declaration", 0),
    ("NAMELIST_DECL", "namelist_decl", "tcc_declaration", 0),
    ("TRANSLATION_UNIT_DECL", "translation_unit_decl", "tcc_declaration", 0),
    ("COMPONENT_REF", "component_ref", "tcc_reference", 3),
    ("BIT_FIELD_REF", "bit_field_ref", "tcc_reference", 3),
    ("ARRAY_REF", "array_ref", "tcc_reference", 4),
    ("ARRAY_RANGE_REF", "array_range_ref", "tcc_reference", 4),
    ("REALPART_EXPR", "realpart_expr", "tcc_reference", 1),
    ("IMAGPART_EXPR", "imagpart_expr", "tcc_reference", 1),
    ("VIEW_CONVERT_EXPR", "view_convert_expr", "tcc_reference", 1),
    ("INDIRECT_REF", "indirect_ref", "tcc_reference", 1),
    ("OBJ_TYPE_REF", "obj_type_ref", "tcc_expression", 3),
    ("CONSTRUCTOR", "constructor", "tcc_exceptional", 0),
    ("COMPOUND_EXPR", "compound_expr", "tcc_expression", 2),
    ("MODIFY_EXPR", "modify_expr", "tcc_expression", 2),
    ("INIT_EXPR", "init_expr", "tcc_expression", 2),
    ("TARGET_EXPR", "target_expr", "tcc_expression", 4),
    ("COND_EXPR", "cond_expr", "tcc_expression", 3),
    ("VEC_DUPLICATE_EXPR", "vec_duplicate_expr", "tcc_unary", 1),
    ("VEC_SERIES_EXPR", "vec_series_expr", "tcc_binary", 2),
    ("VEC_COND_EXPR", "vec_cond_expr", "tcc_expression", 3),
    ("VEC_PERM_EXPR", "vec_perm_expr", "tcc_expression", 3),
    ("BIND_EXPR", "bind_expr", "tcc_expression", 3),
    ("CALL_EXPR", "call_expr", "tcc_vl_exp", 3),
    ("WITH_CLEANUP_EXPR", "with_cleanup_expr", "tcc_expression", 1),
    ("CLEANUP_POINT_EXPR", "cleanup_point_expr", "tcc_expression", 1),
    ("PLACEHOLDER_EXPR", "placeholder_expr", "tcc_exceptional", 0),
    ("PLUS_EXPR", "plus_expr", "tcc_binary", 2),
    ("MINUS_EXPR", "minus_expr", "tcc_binary", 2),
    ("MULT_EXPR", "mult_expr", "tcc_binary", 2),
    ("POINTER_PLUS_EXPR", "pointer_plus_expr", "tcc_binary", 2),
    ("POINTER_DIFF_EXPR", "pointer_diff_expr", "tcc_binary", 2),
    ("MULT_HIGHPART_EXPR", "mult_highpart_expr", "tcc_binary", 2),
    ("TRUNC_DIV_EXPR", "trunc_div_expr", "tcc_binary", 2),
    ("CEIL_DIV_EXPR", "ceil_div_expr", "tcc_binary", 2),
    ("FLOOR_DIV_EXPR", "floor_div_expr", "tcc_binary", 2),
    ("ROUND_DIV_EXPR", "round_div_expr", "tcc_binary", 2),
    ("TRUNC_MOD_EXPR", "trunc_mod_expr", "tcc_binary", 2),
    ("CEIL_MOD_EXPR", "ceil_mod_expr", "tcc_binary", 2),
    ("FLOOR_MOD_EXPR", "floor_mod_expr", "tcc_binary", 2),
    ("ROUND_MOD_EXPR", "round_mod_expr", "tcc_binary", 2),
    ("RDIV_EXPR", "rdiv_expr", "tcc_binary", 2),
    ("EXACT_DIV_EXPR", "exact_div_expr", "tcc_binary", 2),
    ("FIX_TRUNC_EXPR", "fix_trunc_expr", "tcc_unary", 1),
    ("FLOAT_EXPR", "float_expr", "tcc_unary", 1),
    ("NEGATE_EXPR", "negate_expr", "tcc_unary", 1),
    ("MIN_EXPR", "min_expr", "tcc_binary", 2),
    ("MAX_EXPR", "max_expr", "tcc_binary", 2),
    ("ABS_EXPR", "abs_expr", "tcc_unary", 1),
    ("ABSU_EXPR", "absu_expr", "tcc_unary", 1),
    ("LSHIFT_EXPR", "lshift_expr", "tcc_binary", 2),
    ("RSHIFT_EXPR", "rshift_expr", "tcc_binary", 2),
    ("LROTATE_EXPR", "lrotate_expr", "tcc_binary", 2),
    ("RROTATE_EXPR", "rrotate_expr", "tcc_binary", 2),
    ("BIT_IOR_EXPR", "bit_ior_expr", "tcc_binary", 2),
    ("BIT_XOR_EXPR", "bit_xor_expr", "tcc_binary", 2),
    ("BIT_AND_EXPR", "bit_and_expr", "tcc_binary", 2),
    ("BIT_NOT_EXPR", "bit_not_expr", "tcc_unary", 1),
    ("TRUTH_ANDIF_EXPR", "truth_andif_expr", "tcc_expression", 2),
    ("TRUTH_ORIF_EXPR", "truth_orif_expr", "tcc_expression", 2),
    ("TRUTH_AND_EXPR", "truth_and_expr", "tcc_expression", 2),
    ("TRUTH_OR_EXPR", "truth_or_expr", "tcc_expression", 2),
    ("TRUTH_XOR_EXPR", "truth_xor_expr", "tcc_expression", 2),
    ("TRUTH_NOT_EXPR", "truth_not_expr", "tcc_expression", 1),
    ("LT_EXPR", "lt_expr", "tcc_comparison", 2),
    ("LE_EXPR", "le_expr", "tcc_comparison", 2),
    ("GT_EXPR", "gt_expr", "tcc_comparison", 2),
    ("GE_EXPR", "ge_expr", "tcc_comparison", 2),
    ("LTGT_EXPR", "ltgt_expr", "tcc_comparison", 2),
    ("EQ_EXPR", "eq_expr", "tcc_comparison", 2),
    ("NE_EXPR", "ne_expr", "tcc_comparison", 2),
    ("UNORDERED_EXPR", "unordered_expr", "tcc_comparison", 2),
    ("ORDERED_EXPR", "ordered_expr", "tcc_comparison", 2),
    ("UNLT_EXPR", "unlt_expr", "tcc_comparison", 2),
    ("UNLE_EXPR", "unle_expr", "tcc_comparison", 2),
    ("UNGT_EXPR", "ungt_expr", "tcc_comparison", 2),
    ("UNGE_EXPR", "unge_expr", "tcc_comparison", 2),
    ("UNEQ_EXPR", "uneq_expr", "tcc_comparison", 2),
    ("RANGE_EXPR", "range_expr", "tcc_binary", 2),
    ("PAREN_EXPR", "paren_expr", "tcc_unary", 1),
    ("CONVERT_EXPR", "convert_expr", "tcc_unary", 1),
    ("ADDR_SPACE_CONVERT_EXPR", "addr_space_convert_expr", "tcc_unary", 1),
    ("FIXED_CONVERT_EXPR", "fixed_convert_expr", "tcc_unary", 1),
    ("NOP_EXPR", "nop_expr", "tcc_unary", 1),
    ("NON_LVALUE_EXPR", "non_lvalue_expr", "tcc_unary", 1),
    ("COMPOUND_LITERAL_EXPR", "compound_literal_expr", "tcc_expression", 1),
    ("SAVE_EXPR", "save_expr", "tcc_expression", 1),
    ("ADDR_EXPR", "addr_expr", "tcc_expression", 1),
    ("FDESC_EXPR", "fdesc_expr", "tcc_expression", 2),
    ("BIT_INSERT_EXPR", "bit_insert_expr", "tcc_expression", 3),
    ("COMPLEX_EXPR", "complex_expr", "tcc_binary", 2),
    ("CONJ_EXPR", "conj_expr", "tcc_unary", 1),
    ("PREDECREMENT_EXPR", "predecrement_expr", "tcc_expression", 2),
    ("PREINCREMENT_EXPR", "preincrement_expr", "tcc_expression", 2),
    ("POSTDECREMENT_EXPR", "postdecrement_expr", "tcc_expression", 2),
    ("POSTINCREMENT_EXPR", "postincrement_expr", "tcc_expression", 2),
    ("VA_ARG_EXPR", "va_arg_expr", "tcc_expression", 1),
    ("TRY_CATCH_EXPR", "try_catch_expr", "tcc_statement", 2),
    ("TRY_FINALLY_EXPR", "try_finally_expr", "tcc_statement", 2),
    ("EH_ELSE_EXPR", "eh_else_expr", "tcc_statement", 2),
    ("DECL_EXPR", "decl_expr", "tcc_statement", 1),
    ("LABEL_EXPR", "label_expr", "tcc_statement", 1),
    ("GOTO_EXPR", "goto_expr", "tcc_statement", 1),
    ("RETURN_EXPR", "return_expr", "tcc_statement", 1),
    ("EXIT_EXPR", "exit_expr", "tcc_statement", 1),
    ("LOOP_EXPR", "loop_expr", "tcc_statement", 1),
    ("SWITCH_EXPR", "switch_expr", "tcc_statement", 2),
    ("CASE_LABEL_EXPR", "case_label_expr", "tcc_statement", 4),
    ("ASM_EXPR", "asm_expr", "tcc_statement", 5),
    ("SSA_NAME", "ssa_name", "tcc_exceptional", 0),
    ("CATCH_EXPR", "catch_expr", "tcc_statement", 2),
    ("EH_FILTER_EXPR", "eh_filter_expr", "tcc_statement", 2),
    ("SCEV_KNOWN", "scev_known", "tcc_expression", 0),
    ("SCEV_NOT_KNOWN", "scev_not_known", "tcc_expression", 0),
    ("POLYNOMIAL_CHREC", "polynomial_chrec", "tcc_expression", 2),
    ("STATEMENT_LIST", "statement_list", "tcc_exceptional", 0),
    ("ASSERT_EXPR", "assert_expr", "tcc_expression", 2),
    ("TREE_BINFO", "tree_binfo", "tcc_exceptional", 0),
    ("WITH_SIZE_EXPR", "with_size_expr", "tcc_expression", 2),
    ("REALIGN_LOAD_EXPR", "realign_load", "tcc_expression", 3),
    ("TARGET_MEM_REF", "target_mem_ref", "tcc_reference", 5),
    ("MEM_REF", "mem_ref", "tcc_reference", 2),
    ("OACC_PARALLEL", "oacc_parallel", "tcc_statement", 2),
    ("OACC_KERNELS", "oacc_kernels", "tcc_statement", 2),
    ("OACC_SERIAL", "oacc_serial", "tcc_statement", 2),
    ("OACC_DATA", "oacc_data", "tcc_statement", 2),
    ("OACC_HOST_DATA", "oacc_host_data", "tcc_statement", 2),
    ("OMP_PARALLEL", "omp_parallel", "tcc_statement", 2),
    ("OMP_TASK", "omp_task", "tcc_statement", 2),
    ("OMP_FOR", "omp_for", "tcc_statement", 7),
    ("OMP_SIMD", "omp_simd", "tcc_statement", 7),
    ("OMP_DISTRIBUTE", "omp_distribute", "tcc_statement", 7),
    ("OMP_TASKLOOP", "omp_taskloop", "tcc_statement", 7),
    ("OMP_LOOP", "omp_loop", "tcc_statement", 7),
    ("OMP_TILE", "omp_tile", "tcc_statement", 7),
    ("OMP_UNROLL", "omp_unroll", "tcc_statement", 7),
    ("OACC_LOOP", "oacc_loop", "tcc_statement", 7),
    ("OMP_TEAMS", "omp_teams", "tcc_statement", 2),
    ("OMP_TARGET_DATA", "omp_target_data", "tcc_statement", 2),
    ("OMP_TARGET", "omp_target", "tcc_statement", 2),
    ("OMP_SECTIONS", "omp_sections", "tcc_statement", 2),
    ("OMP_ORDERED", "omp_ordered", "tcc_statement", 2),
    ("OMP_CRITICAL", "omp_critical", "tcc_statement", 3),
    ("OMP_SINGLE", "omp_single", "tcc_statement", 2),
    ("OMP_SCOPE", "omp_scope", "tcc_statement", 2),
    ("OMP_TASKGROUP", "omp_taskgroup", "tcc_statement", 2),
    ("OMP_MASKED", "omp_masked", "tcc_statement", 2),
    ("OMP_SCAN", "omp_scan", "tcc_statement", 2),
    ("OMP_DISPATCH", "omp_dispatch", "tcc_statement", 2),
    ("OMP_INTEROP", "omp_inteorp", "tcc_statement", 1),
    ("OMP_SECTION", "omp_section", "tcc_statement", 1),
    ("OMP_STRUCTURED_BLOCK", "omp_structured_block", "tcc_statement", 1),
    ("OMP_MASTER", "omp_master", "tcc_statement", 1),
    ("OACC_CACHE", "oacc_cache", "tcc_statement", 1),
    ("OACC_DECLARE", "oacc_declare", "tcc_statement", 1),
    ("OACC_ENTER_DATA", "oacc_enter_data", "tcc_statement", 1),
    ("OACC_EXIT_DATA", "oacc_exit_data", "tcc_statement", 1),
    ("OACC_UPDATE", "oacc_update", "tcc_statement", 1),
    ("OMP_TARGET_UPDATE", "omp_target_update", "tcc_statement", 1),
    ("OMP_TARGET_ENTER_DATA", "omp_target_enter_data", "tcc_statement", 1),
    ("OMP_TARGET_EXIT_DATA", "omp_target_exit_data", "tcc_statement", 1),
    ("OMP_METADIRECTIVE", "omp_metadirective", "tcc_statement", 1),
    ("OMP_ATOMIC", "omp_atomic", "tcc_statement", 2),
    ("OMP_ATOMIC_READ", "omp_atomic_read", "tcc_statement", 1),
    ("OMP_ATOMIC_CAPTURE_OLD", "omp_atomic_capture_old", "tcc_statement", 2),
    ("OMP_ATOMIC_CAPTURE_NEW", "omp_atomic_capture_new", "tcc_statement", 2),
    ("OMP_CLAUSE", "omp_clause", "tcc_exceptional", 0),
    ("OMP_ARRAY_SECTION", "omp_array_section", "tcc_expression", 3),
    ("OMP_NEXT_VARIANT", "omp_next_variant", "tcc_expression", 2),
    ("OMP_TARGET_DEVICE_MATCHES", "omp_target_device_matches", "tcc_expression", 2),
    ("TRANSACTION_EXPR", "transaction_expr", "tcc_expression", 1),
    ("DOT_PROD_EXPR", "dot_prod_expr", "tcc_expression", 3),
    ("WIDEN_SUM_EXPR", "widen_sum_expr", "tcc_binary", 2),
    ("SAD_EXPR", "sad_expr", "tcc_expression", 3),
    ("WIDEN_MULT_EXPR", "widen_mult_expr", "tcc_binary", 2),
    ("WIDEN_MULT_PLUS_EXPR", "widen_mult_plus_expr", "tcc_expression", 3),
    ("WIDEN_MULT_MINUS_EXPR", "widen_mult_minus_expr", "tcc_expression", 3),
    ("WIDEN_LSHIFT_EXPR", "widen_lshift_expr", "tcc_binary", 2),
    ("VEC_WIDEN_MULT_HI_EXPR", "widen_mult_hi_expr", "tcc_binary", 2),
    ("VEC_WIDEN_MULT_LO_EXPR", "widen_mult_lo_expr", "tcc_binary", 2),
    ("VEC_WIDEN_MULT_EVEN_EXPR", "widen_mult_even_expr", "tcc_binary", 2),
    ("VEC_WIDEN_MULT_ODD_EXPR", "widen_mult_odd_expr", "tcc_binary", 2),
    ("VEC_UNPACK_HI_EXPR", "vec_unpack_hi_expr", "tcc_unary", 1),
    ("VEC_UNPACK_LO_EXPR", "vec_unpack_lo_expr", "tcc_unary", 1),
    ("VEC_UNPACK_FLOAT_HI_EXPR", "vec_unpack_float_hi_expr", "tcc_unary", 1),
    ("VEC_UNPACK_FLOAT_LO_EXPR", "vec_unpack_float_lo_expr", "tcc_unary", 1),
    ("VEC_UNPACK_FIX_TRUNC_HI_EXPR", "vec_unpack_fix_trunc_hi_expr", "tcc_unary", 1),
    ("VEC_UNPACK_FIX_TRUNC_LO_EXPR", "vec_unpack_fix_trunc_lo_expr", "tcc_unary", 1),
    ("VEC_PACK_TRUNC_EXPR", "vec_pack_trunc_expr", "tcc_binary", 2),
    ("VEC_PACK_SAT_EXPR", "vec_pack_sat_expr", "tcc_binary", 2),
    ("VEC_PACK_FIX_TRUNC_EXPR", "vec_pack_fix_trunc_expr", "tcc_binary", 2),
    ("VEC_PACK_FLOAT_EXPR", "vec_pack_float_expr", "tcc_binary", 2),
    ("VEC_WIDEN_LSHIFT_HI_EXPR", "widen_lshift_hi_expr", "tcc_binary", 2),
    ("VEC_WIDEN_LSHIFT_LO_EXPR", "widen_lshift_lo_expr", "tcc_binary", 2),
    ("PREDICT_EXPR", "predict_expr", "tcc_expression", 1),
    ("OPTIMIZATION_NODE", "optimization_node", "tcc_exceptional", 0),
    ("TARGET_OPTION_NODE", "target_option_node", "tcc_exceptional", 0),
    ("ANNOTATE_EXPR", "annotate_expr", "tcc_expression", 3),

    ## gcc/cp/cp-tree.def
    ("OFFSET_REF", "offset_ref", "tcc_reference", 2),
    ("PTRMEM_CST", "ptrmem_cst", "tcc_constant", 0),
    ("NEW_EXPR", "nw_expr", "tcc_expression", 4),
    ("VEC_NEW_EXPR", "vec_nw_expr", "tcc_expression", 3),
    ("DELETE_EXPR", "dl_expr", "tcc_expression", 2),
    ("VEC_DELETE_EXPR", "vec_dl_expr", "tcc_expression", 2),
    ("SCOPE_REF", "scope_ref", "tcc_reference", 2),
    ("MEMBER_REF", "member_ref", "tcc_reference", 2),
    ("TYPE_EXPR", "type_expr", "tcc_expression", 1),
    ("AGGR_INIT_EXPR", "aggr_init_expr", "tcc_vl_exp", 3),
    ("VEC_INIT_EXPR", "vec_init_expr", "tcc_expression", 2),
    ("THROW_EXPR", "throw_expr", "tcc_expression", 1),
    ("EMPTY_CLASS_EXPR", "empty_class_expr", "tcc_expression", 0),
    ("BASELINK", "baselink", "tcc_exceptional", 0),
    ("TEMPLATE_DECL", "template_decl", "tcc_declaration", 0),
    ("TEMPLATE_PARM_INDEX", "template_parm_index", "tcc_exceptional", 0),
    ("TEMPLATE_TEMPLATE_PARM", "template_template_parm", "tcc_type", 0),
    ("TEMPLATE_TYPE_PARM", "template_type_parm", "tcc_type", 0),
    ("TYPENAME_TYPE", "typename_type", "tcc_type", 0),
    ("TYPEOF_TYPE", "typeof_type", "tcc_type", 0),
    ("BOUND_TEMPLATE_TEMPLATE_PARM", "bound_template_template_parm", "tcc_type", 0),
    ("UNBOUND_CLASS_TEMPLATE", "unbound_class_template", "tcc_type", 0),
    ("USING_DECL", "using_decl", "tcc_declaration", 0),
    ("USING_STMT", "using_stmt", "tcc_statement", 1),
    ("DEFERRED_PARSE", "deferred_parse", "tcc_exceptional", 0),
    ("DEFERRED_NOEXCEPT", "deferred_noexcept", "tcc_exceptional", 0),
    ("TEMPLATE_ID_EXPR", "template_id_expr", "tcc_expression", 2),
    ("OVERLOAD", "overload", "tcc_exceptional", 0),
    ("BINDING_VECTOR", "binding_vector", "tcc_exceptional", 0),
    ("PSEUDO_DTOR_EXPR", "pseudo_dtor_expr", "tcc_expression", 3),
    ("MODOP_EXPR", "modop_expr", "tcc_expression", 3),
    ("CAST_EXPR", "cast_expr", "tcc_unary", 1),
    ("REINTERPRET_CAST_EXPR", "reinterpret_cast_expr", "tcc_unary", 1),
    ("CONST_CAST_EXPR", "const_cast_expr", "tcc_unary", 1),
    ("STATIC_CAST_EXPR", "static_cast_expr", "tcc_unary", 1),
    ("DYNAMIC_CAST_EXPR", "dynamic_cast_expr", "tcc_unary", 1),
    ("IMPLICIT_CONV_EXPR", "implicit_conv_expr", "tcc_unary", 1),
    ("DOTSTAR_EXPR", "dotstar_expr", "tcc_expression", 2),
    ("TYPEID_EXPR", "typeid_expr", "tcc_expression", 1),
    ("NOEXCEPT_EXPR", "noexcept_expr", "tcc_unary", 1),
    ("SPACESHIP_EXPR", "spaceship_expr", "tcc_expression", 2),
    ("CTOR_INITIALIZER", "ctor_initializer", "tcc_expression", 1),
    ("TRY_BLOCK", "try_block", "tcc_statement", 2),
    ("EH_SPEC_BLOCK", "eh_spec_block", "tcc_statement", 2),
    ("HANDLER", "handler", "tcc_statement", 2),
    ("MUST_NOT_THROW_EXPR", "must_not_throw_expr", "tcc_expression", 2),
    ("CLEANUP_STMT", "cleanup_stmt", "tcc_statement", 3),
    ("IF_STMT", "if_stmt", "tcc_statement", 4),
    ("RANGE_FOR_STMT", "range_for_stmt", "tcc_statement", 6),
    ("EXPR_STMT", "expr_stmt", "tcc_expression", 1),
    ("TAG_DEFN", "tag_defn", "tcc_expression", 0),
    ("OFFSETOF_EXPR", "offsetof_expr", "tcc_expression", 2),
    ("ADDRESSOF_EXPR", "addressof_expr", "tcc_expression", 1),
    ("ARROW_EXPR", "arrow_expr", "tcc_expression", 1),
    ("ALIGNOF_EXPR", "alignof_expr", "tcc_expression", 1),
    ("AT_ENCODE_EXPR", "at_encode_expr", "tcc_expression", 1),
    ("STMT_EXPR", "stmt_expr", "tcc_expression", 1),
    ("UNARY_PLUS_EXPR", "unary_plus_expr", "tcc_unary", 1),
    ("STATIC_ASSERT", "static_assert", "tcc_exceptional", 0),
    ("TYPE_ARGUMENT_PACK", "type_argument_pack", "tcc_type", 0),
    ("NONTYPE_ARGUMENT_PACK", "nontype_argument_pack", "tcc_expression", 1),
    ("TYPE_PACK_EXPANSION", "type_pack_expansion", "tcc_type", 0),
    ("EXPR_PACK_EXPANSION", "expr_pack_expansion", "tcc_expression", 3),
    ("PACK_INDEX_TYPE", "pack_index_type", "tcc_type", 0),
    ("PACK_INDEX_EXPR", "pack_index_expr", "tcc_expression", 2),
    ("ARGUMENT_PACK_SELECT", "argument_pack_select", "tcc_exceptional", 0),
    ("UNARY_LEFT_FOLD_EXPR", "unary_left_fold_expr", "tcc_expression", 2),
    ("UNARY_RIGHT_FOLD_EXPR", "unary_right_fold_expr", "tcc_expression", 2),
    ("BINARY_LEFT_FOLD_EXPR", "binary_left_fold_expr", "tcc_expression", 3),
    ("BINARY_RIGHT_FOLD_EXPR", "binary_right_fold_expr", "tcc_expression", 3),
    ("BIT_CAST_EXPR", "bit_cast_expr", "tcc_expression", 1),
    ("TRAIT_EXPR", "trait_expr", "tcc_exceptional", 0),
    ("TRAIT_TYPE", "trait_type", "tcc_type", 0),
    ("LAMBDA_EXPR", "lambda_expr", "tcc_exceptional", 0),
    ("DECLTYPE_TYPE", "decltype_type", "tcc_type", 0),
    ("BASES", "bases", "tcc_type", 0),
    ("DEPENDENT_OPERATOR_TYPE", "dependent_operator_type", "tcc_type", 0),
    ("TEMPLATE_INFO", "template_info", "tcc_exceptional", 0),
    ("OMP_DEPOBJ", "omp_depobj", "tcc_statement", 2),
    ("CONSTRAINT_INFO", "constraint_info", "tcc_exceptional", 0),
    ("REQUIRES_EXPR", "requires_expr", "tcc_expression", 3),
    ("SIMPLE_REQ", "simple_req", "tcc_expression", 1),
    ("TYPE_REQ", "type_req", "tcc_expression", 1),
    ("COMPOUND_REQ", "compound_req", "tcc_expression", 2),
    ("NESTED_REQ", "nested_req", "tcc_expression", 1),
    ("ATOMIC_CONSTR", "atomic_constr", "tcc_expression", 1),
    ("CONJ_CONSTR", "conj_constr", "tcc_expression", 2),
    ("DISJ_CONSTR", "disj_constr", "tcc_expression", 2),
    ("CO_AWAIT_EXPR", "co_await", "tcc_expression", 5),
    ("CO_YIELD_EXPR", "co_yield", "tcc_expression", 2),
    ("CO_RETURN_EXPR", "co_return", "tcc_statement", 2),
    ("ASSERTION_STMT", "assertion_stmt", "tcc_statement", 3),
    ("PRECONDITION_STMT", "precondition_stmt", "tcc_statement", 3),
    ("POSTCONDITION_STMT", "postcondition_stmt", "tcc_statement", 4),
    ("TU_LOCAL_ENTITY", "tu_local_entity", "tcc_exceptional", 0),
]
