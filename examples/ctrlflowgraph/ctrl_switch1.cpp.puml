@startuml

card "::calc_switch0() -> int" {
    :const int timestamp;;
    :timestamp = ::time(0);
    #lightgreen:return -3;
    stop
    -[hidden]->
}

card "::calc_switch1() -> int" {
    :const int timestamp;;
    :timestamp = ::time(0);

partition "switch:\ntimestamp % 4" {
    ' case: 0 fallthrough: True
    if ( 0 ? ) then (yes)
        #lightgreen:return 0;
        stop
    endif
}
    #lightgreen:return -3;
    stop
    -[hidden]->
}

card "::calc_switch2() -> int" {
    :const int timestamp;;
    :timestamp = ::time(0);

partition "switch:\ntimestamp % 5" {
    ' case: None fallthrough: True
    if ( default ) then (yes)
        #lightgreen:return 0;
        stop
    else
        -[hidden]->
    endif
}
    #lightgreen:return -3;
    stop
    -[hidden]->
}

card "::calc_switch3() -> int" {
    :int timestamp;;
    :timestamp = ::time(0);

partition "switch:\ntimestamp % 6" {
    ' case: None fallthrough: True
    if ( default ) then (yes)
        :timestamp = ::time(0);
    else
        -[hidden]->
    endif
}
    #lightgreen:return -3;
    stop
    -[hidden]->
}

card "::calc_switch4() -> int" {
    :int timestamp;;
    :timestamp = ::time(0);

partition "switch:\ntimestamp % 7" {
    ' case: 0 fallthrough: True
    if ( 0 ? ) then (yes)
        #lightgreen:return 0;
        stop
    endif
    ' case: 1 fallthrough: True
    if ( 1 ? ) then (yes)
        #lightgreen:return 1;
        stop
    endif
    ' case: 2 fallthrough: True
    if ( 2 ? ) then (yes)
        #lightgreen:return 2;
        stop
    endif
    ' case: None fallthrough: True
    if ( default ) then (yes)
        :timestamp = ::time(0);
    else
        -[hidden]->
    endif
}
    :timestamp = timestamp * 3;
    #lightgreen:return timestamp % 2;
    stop
    -[hidden]->
}


@enduml
