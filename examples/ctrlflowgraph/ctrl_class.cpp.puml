@startuml

card "::item::ExampleB::methodB1(int const param) -> int" {
    :const float var1 = param * 3.2999999999999998223643161e+0;
    :const float var2 = param * 3.2999999999999998223643161e+0;
    :const int valA;;
    :valA = (&objA)->methodA1();
    :int retX;;
    :retX = this->methodB2(var1) * valA;
    :retX = retX + 7;
    :int retY;;
    :retY = ::item::ExampleB::methodB3(12);
    #lightgreen:return retX + retY;
    stop
    -[hidden]->
}

card "::item::ExampleB::methodB3(int const val) -> int" {
    #lightgreen:return val;
    stop
    -[hidden]->
}

card "::item::ExampleB::methodB2(float const param) -> int" {
    :const float var = param * 6.5999999999999996447286321e+0;
    #lightgreen:return var;
    stop
    -[hidden]->
}

card "::item::ExampleA::ExampleA() -> void" {
    -[hidden]->
}

card "::item::ExampleA::~ExampleA() -> void" {
    group try
        :this->__dt_comp();
    end group

    group finally
        :::[--no entry--](this, 16);
    end group

    -[hidden]->
}

card "::item::ExampleA::methodA1() -> int" {
    :const int ret = 5;
    #lightgreen:return 5;
    stop
    -[hidden]->
}


@enduml
